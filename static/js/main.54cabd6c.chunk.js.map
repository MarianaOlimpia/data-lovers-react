{"version":3,"sources":["assets/imglogo.jpg","components/Modal/Modal.jsx","components/cards/Cards.jsx","assets/options.jsx","components/menu/MainMenu.jsx","components/NavBar/NavBar.jsx","components/views/main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Transition","React","forwardRef","props","ref","Slide","direction","Modal","character","useState","open","setOpen","handleClose","Button","variant","color","onClick","Dialog","fullScreen","onClose","TransitionComponent","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","className","name","src","images","lg","alt","List","ListItemText","primary","biography","publisher","secondary","fullName","work","occupation","firstAppearance","connections","groupAffiliation","Divider","Cards","Card","CardActionArea","CardMedia","image","sm","title","CardContent","gutterBottom","component","CardActions","options","value","MainMenu","select","setSearchCharacter","anchorEl","setAnchorEl","aria-controls","aria-haspopup","event","currentTarget","Menu","id","keepMounted","Boolean","map","option","index","MenuItem","key","selected","NavBar","characters","searchCharacterTemp","setSearchCharacterTemp","style","background","logo","menu","onSubmit","e","preventDefault","TextField","label","InputProps","startAdornment","InputAdornment","placeholder","onChange","target","Main","setCharacters","searchCharacter","getData","a","fetch","response","json","data","filterCharacters","filter","result","useEffect","selectedData","toLowerCase","includes","alignment","Grid","item","container","xs","spacing","justify","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54cabd6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/imglogo.f0070bc7.jpg\";","import React, { useState } from 'react';\r\nimport './Modal.css';\r\nimport {Button, Dialog, ListItemText, List, Divider, AppBar, Toolbar, IconButton, Typography, Slide} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Modal = ({character}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>See more...</Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className='modal-title'>{character.name}</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className='modal-content'>\r\n            <div>\r\n                <img src={character.images.lg} alt='character' className='modal-character-image'></img>\r\n            </div>\r\n            <List className='list'>\r\n                <ListItemText className='list-item' primary={character.biography.publisher} secondary=\"Published by\" />\r\n                <ListItemText className='list-item' primary={character.biography.fullName} secondary=\"Full Name\" />\r\n                <ListItemText className='list-item' primary={character.work.occupation} secondary=\"Occupation\" />\r\n                <ListItemText className='list-item' primary={character.biography.firstAppearance} secondary=\"First apparition\" />\r\n                <ListItemText className='list-item' primary={character.connections.groupAffiliation} secondary=\"Affiliations\" />\r\n                <Divider />\r\n            </List>\r\n        </div>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './Cards.css';\r\nimport { Card, CardActionArea, CardMedia, CardContent, Typography, CardActions } from '@material-ui/core';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst Cards = ({character}) => {\r\n    return (\r\n        <Card>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                className='character-image'\r\n                image={character.images.sm}\r\n                title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">{character.name}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{character.biography.publisher}</Typography>\r\n                    <Typography className=\"sub-info\" variant=\"body2\" color=\"textSecondary\" component=\"p\">{character.connections.groupAffiliation}</Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Modal character={character} />\r\n            </CardActions>\r\n        </Card>\r\n         );\r\n}\r\n \r\nexport default Cards;","const options = [\r\n    {title: \"Editorial\", options: [{name: \"Marvel\", value: \"Marvel Comics\"}, {name: \"DC\", value: \"DC Comics\"}]},\r\n    {title:\"Alignment\", options: [{name: \"Heroe\", value: \"good\"}, {name: \"Villain\", value: \"bad\"}]}\r\n]\r\n\r\nexport default options;","import React, { useState } from 'react';\r\nimport './MainMenu.css';\r\nimport {Button, Menu, MenuItem} from '@material-ui/core/';\r\n\r\nconst MainMenu = ({title, select, setSearchCharacter}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\r\n    const selectedMenuOption = (selected) => setSearchCharacter(selected);\r\n    const handleClose = () => setAnchorEl(null);\r\n\r\n    return ( \r\n        <div className='menu-button'>\r\n            <Button variant='contained' color='primary' aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                {title}\r\n            </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {select.map((option, index) => <MenuItem key={index} onClick={() => selectedMenuOption(option.value)}>{option.name}</MenuItem>)}\r\n            </Menu>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default MainMenu;","import React, { useState } from 'react';\r\nimport options from '../../assets/options';\r\nimport MainMenu from '../menu/MainMenu';\r\nimport logo from '../../assets/imglogo.jpg';\r\nimport './NavBar.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { AppBar, Toolbar, TextField, InputAdornment } from '@material-ui/core';\r\n\r\nconst NavBar = ({characters, setSearchCharacter}) => {\r\n    const [searchCharacterTemp, setSearchCharacterTemp] = useState(characters)\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setSearchCharacter(searchCharacterTemp);\r\n      }\r\n\r\n    return ( \r\n      <AppBar position=\"fixed\" style={{ background: 'black' }}>\r\n        <Toolbar className='nav-bar'>\r\n          <img src= {logo} alt='logo' className=\"logo\" />\r\n          <div className='menu'>\r\n            {options.map((menu, index) => (<MainMenu key={index} title={menu.title} select={menu.options} setSearchCharacter={setSearchCharacter}/>))}\r\n          </div>\r\n            <form className='searchForm' onSubmit={onSubmit}>\r\n                    <TextField label='Search by keywords' InputProps={{startAdornment: (<InputAdornment position=\"start\">\r\n              <SearchIcon color=\"primary\" />\r\n            </InputAdornment>\r\n          ),\r\n        }} color='primary' placeholder='Search' onChange={(e) => {\r\n                        setSearchCharacterTemp(e.target.value);\r\n                        }} value={searchCharacterTemp}/>\r\n            </form>\r\n        </Toolbar>\r\n      </AppBar>\r\n     );\r\n}\r\n \r\nexport default NavBar;\r\n","import React, {useEffect, useState} from 'react';\r\nimport './Main.css';\r\nimport Cards from '../../cards/Cards';\r\nimport NavBar from '../../NavBar/NavBar';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst Main = () => {\r\n    const [characters, setCharacters] = useState([]);\r\n    const [searchCharacter, setSearchCharacter] = useState();\r\n    const getData = async () => {\r\n        const response = await fetch('https://akabab.github.io/superhero-api/api/all.json');\r\n        const data = await response.json();\r\n        const filterCharacters = data.filter(result => (result.biography.publisher === \"Marvel Comics\" || result.biography.publisher === \"DC Comics\"))\r\n        setCharacters(filterCharacters);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n\r\n    const selectedData = !searchCharacter \r\n    ? characters \r\n    : characters.filter(character => character.name.toLowerCase().includes(searchCharacter.toLowerCase()) || character.connections.groupAffiliation.toLowerCase().includes(searchCharacter.toLowerCase()) || character.biography.publisher === searchCharacter || character.biography.alignment === searchCharacter)\r\n    \r\n     return ( \r\n        <Grid direction='column' item container xs={12}>\r\n            <NavBar characters={characters} setSearchCharacter={setSearchCharacter} />\r\n            <Grid item container xs={12} spacing={2} justify='space-around' className='card-container'>\r\n                {selectedData.map(character => (<Cards key={character.id} character={character} />))}\r\n            </Grid>\r\n        </Grid>\r\n     );\r\n}\r\n \r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/views/main/Main';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}